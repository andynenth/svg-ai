name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov flake8 black Flask Pillow

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 backend/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 backend/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format check with black
      run: |
        # For now, just show differences without failing
        black --diff backend/ || true

    - name: Run tests
      run: |
        # Run backend API tests
        python -m pytest backend/test_api.py -v
        # Run e2e tests
        python -m pytest test_e2e.py -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  # Benchmark job removed - benchmark files no longer exist in current structure

  # Quality check job removed - quality check files no longer exist in current structure

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Build backend package
      run: |
        python -m pip install --upgrade pip
        pip install build
        cd backend
        # Build would need setup.py in backend/

    - name: Store version
      run: |
        echo "VERSION=$(python -c 'print(__import__("datetime").datetime.now().strftime("%Y.%m.%d"))')" >> $GITHUB_ENV

    - name: Create Release
      if: github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        body: |
          ## Changes
          ${{ github.event.head_commit.message }}

          ## Performance Metrics
          - Detection Accuracy: 72%
          - Average SSIM: 98%+
          - File Size Reduction: 28% (with post-processing)
        draft: false
        prerelease: false