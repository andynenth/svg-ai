# Multi-stage Dockerfile for 4-Tier SVG-AI API Production Deployment
FROM python:3.9-slim as base

# System dependencies and optimization
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    libpq-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN groupadd -r svgai && useradd -r -g svgai svgai

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# ============================================================================
# Production Build Stage
# ============================================================================
FROM base as production

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements_ai_phase1.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements_ai_phase1.txt

# Install VTracer with temporary directory workaround
ENV TMPDIR=/tmp
RUN pip install --no-cache-dir vtracer

# Copy application code
COPY backend/ ./backend/
COPY converters/ ./converters/
COPY utils/ ./utils/
COPY deployment/production/ ./deployment/production/

# Copy configuration files
COPY deployment/docker/docker-entrypoint-4tier.sh ./
RUN chmod +x docker-entrypoint-4tier.sh

# Create necessary directories
RUN mkdir -p /app/logs /app/cache /app/models /app/config /tmp/claude

# Set proper ownership
RUN chown -R svgai:svgai /app /tmp/claude

# Switch to non-root user
USER svgai

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/api/v2/optimization/health || exit 1

# Entry point
ENTRYPOINT ["./docker-entrypoint-4tier.sh"]
CMD ["api"]

# ============================================================================
# Development Build Stage (for local testing)
# ============================================================================
FROM base as development

WORKDIR /app

# Install development dependencies
COPY requirements.txt requirements_ai_phase1.txt requirements-dev.txt ./
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements_ai_phase1.txt && \
    pip install --no-cache-dir -r requirements-dev.txt

# Install VTracer
ENV TMPDIR=/tmp
RUN pip install --no-cache-dir vtracer

# Copy application code
COPY . .

# Create directories
RUN mkdir -p /app/logs /app/cache /app/models /app/config /tmp/claude

# Set ownership
RUN chown -R svgai:svgai /app /tmp/claude

USER svgai

EXPOSE 8000

# Development command
CMD ["python", "-m", "uvicorn", "backend.api.unified_optimization_api:router", "--host", "0.0.0.0", "--port", "8000", "--reload"]