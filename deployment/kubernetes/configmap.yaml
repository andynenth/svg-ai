apiVersion: v1
kind: ConfigMap
metadata:
  name: svg-ai-config
  namespace: svg-ai-prod
  labels:
    app: svg-ai
    component: config
data:
  # Application configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  PYTHONUNBUFFERED: "1"

  # Performance settings
  WORKERS: "4"
  MAX_REQUESTS: "1000"
  MAX_REQUESTS_JITTER: "100"
  WORKER_CONCURRENCY: "2"

  # Optimization settings
  DEFAULT_QUALITY_TARGET: "0.85"
  MAX_OPTIMIZATION_TIME: "30"
  CACHE_TTL: "3600"

  # Resource limits
  OMP_NUM_THREADS: "4"
  CUDA_VISIBLE_DEVICES: ""

  # Monitoring
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"

  # Redis configuration
  REDIS_DB: "0"
  REDIS_MAX_CONNECTIONS: "20"

  # Database configuration
  DB_POOL_SIZE: "20"
  DB_MAX_OVERFLOW: "30"
  DB_POOL_TIMEOUT: "30"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: svg-ai-prod
  labels:
    app: svg-ai
    component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

        # Upstream API servers
        upstream api_servers {
            least_conn;
            server svg-ai-api:8000 max_fails=3 fail_timeout=30s;
        }

        server {
            listen 80;
            server_name _;

            # Rate limiting
            limit_req zone=api burst=20 nodelay;

            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # API proxy
            location / {
                proxy_pass http://api_servers;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_connect_timeout 5s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;

                proxy_buffering on;
                proxy_buffer_size 8k;
                proxy_buffers 16 8k;
            }

            # File upload size limit
            client_max_body_size 10M;
        }
    }