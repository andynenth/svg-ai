apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: svg-ai-ingress
  namespace: svg-ai-prod
  labels:
    app: svg-ai
    component: ingress
  annotations:
    # NGINX ingress controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"

    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/client-max-body-size: "10m"

    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"

    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"

    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"
    nginx.ingress.kubernetes.io/load-balance: "ewma"

    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  tls:
  - hosts:
    - api.svg-ai.com
    - svg-ai.com
    secretName: tls-secret
  rules:
  - host: api.svg-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: svg-ai-api-service
            port:
              number: 8000
  - host: svg-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: svg-ai-api-service
            port:
              number: 8000
---
# Ingress for monitoring endpoints (internal only)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: svg-ai-monitoring-ingress
  namespace: svg-ai-prod
  labels:
    app: svg-ai
    component: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "SVG-AI Monitoring - Authentication Required"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  tls:
  - hosts:
    - monitoring.svg-ai.com
    secretName: tls-secret
  rules:
  - host: monitoring.svg-ai.com
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: svg-ai-metrics
            port:
              number: 9090