# CI/CD Pipeline Configuration for SVG-AI Optimization System
name: svg-ai-optimization-pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: "your-registry.com"
  KUBE_NAMESPACE: "svg-ai-prod"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_ai_phase1.txt

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --cov=backend --cov-report=xml

    - name: Run integration tests
      run: |
        python -m pytest tests/integration/ -v

    - name: Quality checks
      run: |
        python scripts/test_correlation_analysis.py
        python scripts/test_method1_complete_integration.py

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build Docker images
      run: |
        docker build -f deployment/docker/Dockerfile -t $DOCKER_REGISTRY/svg-ai-api:$GITHUB_SHA .
        docker build -f deployment/docker/Dockerfile.worker -t $DOCKER_REGISTRY/svg-ai-worker:$GITHUB_SHA .

    - name: Push to registry
      run: |
        echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin
        docker push $DOCKER_REGISTRY/svg-ai-api:$GITHUB_SHA
        docker push $DOCKER_REGISTRY/svg-ai-worker:$GITHUB_SHA

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
    - name: Deploy to staging
      run: |
        ./scripts/deployment/deploy-staging.sh $GITHUB_SHA

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to production
      run: |
        ./scripts/deployment/deploy-production.sh $GITHUB_SHA